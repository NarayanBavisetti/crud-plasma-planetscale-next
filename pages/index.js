import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [bookTitle, setBookTitle] = useState("");
  const [bookAuthor, setBookAuthor] = useState("");
  const [bookGenre, setBookGenre] = useState("");
  const [data, setData] = useState(null);
  const [update, setUpdate] = useState(false);
  const [id, setId] = useState();

  useEffect(() => {
    getAllBooks();
  }, []);

  const getAllBooks = async () => {
    try {
      const response = await fetch("/api/books", {
        method: "GET",
        headers: { "Content-Type": "application/json" },
      });
      setData(await response.json());
      if (response.status !== 200) {
        console.log("something went wrong");
      } else {
        console.log("Fetched all the books successfully !!!");
      }
    } catch (error) {
      console.log("there was an error fetching", error);
    }
  };

  const getBook = async (id) => {
    try {
      const response = await fetch(`/api/books/${id}`, {
        method: "GET",
        headers: { "Content-Type": "application/json" },
      });

      const data = await response.json();
      setBookAuthor(data.bookAuthor);
      setBookGenre(data.bookGenre);
      setBookTitle(data.bookTitle);
      setId(data.id);
      if (response.status !== 200) {
        console.log("something went wrong");
      } else {
        console.log("Fetched the book successfully !!!");
      }
    } catch (error) {
      console.log("there was an error fetching", error);
    }
  };

  const onEdit = async (e) => {
    e.preventDefault();
    const body = { bookTitle, bookAuthor, bookGenre };
    try {
      const response = await fetch(`/api/books/${id}`, {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });
      if (response.status !== 200) {
        console.log("something went wrong");
      } else {
        resetForm();
        getAllBooks();
        console.log(data);
        console.log("form edited successfully !!!");
      }
    } catch (error) {
      console.log("there was an error submitting", error);
    }
  };

  const onDelete = async (id) => {
    try {
      const response = await fetch(`/api/books/${id}`, {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
      });
      if (response.status !== 200) {
        console.log("something went wrong");
      } else {
        resetForm();
        getAllBooks();
        console.log("form deleted successfully !!!");
      }
    } catch (error) {
      console.log("there was an error submitting", error);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    const body = { bookTitle, bookAuthor, bookGenre };
    try {
      const response = await fetch("/api/books", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });
      if (response.status !== 200) {
        console.log("something went wrong");
      } else {
        resetForm();
        getAllBooks();
        console.log(data);
        console.log("form submitted successfully !!!");
      }
    } catch (error) {
      console.log("there was an error submitting", error);
    }
  };

  const resetForm = () => {
    setBookTitle("");
    setBookAuthor("");
    setBookGenre("");
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Books App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to Books Store</h1>

        <div className={styles.grid}>
          <input
            type="text"
            placeholder="Enter book title"
            onChange={(e) => setBookTitle(e.target.value)}
            value={bookTitle}
            className={styles.card}
          />
          <input
            type="text"
            placeholder="Enter book author"
            onChange={(e) => setBookAuthor(e.target.value)}
            value={bookAuthor}
            className={styles.card}
          />
          <input
            type="text"
            placeholder="Enter book genre"
            onChange={(e) => setBookGenre(e.target.value)}
            value={bookGenre}
            className={styles.card}
          />
          {update == "false" ? (
            <button type="submit" onClick={handleSubmit}>
              Submit
            </button>
          ) : (
            <button type="submit" onClick={onEdit}>
              Update
            </button>
          )}
        </div>
        <div>
          {data?.map((book) => {
            return (
              <li>
                Title : {book.bookTitle} Author: {book.bookAuthor} Genre:{" "}
                {book.bookGenre}
                {"  "}
                <button onClick={() => getBook(book.id)}>Edit</button>
                {"  "}
                <button onClick={() => onDelete(book.id)}>Delete</button>
              </li>
            );
          })}
        </div>
      </main>
    </div>
  );
}
